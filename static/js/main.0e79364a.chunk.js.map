{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByLength","LENGTH","sortByName","ALPABET","reset","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,aAAe,WACb,EAAKD,SAAS,CAAEH,SAAUL,EAASU,UAbvC,EAgBEC,WAAa,WACX,EAAKH,SAAS,CAAEH,SAAUL,EAASY,WAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EArDH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKL,EAASY,QACZ,OAAOM,EAAME,cAAcD,GAE7B,KAAKnB,EAASU,OACZ,OAAOQ,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAIbC,QAAQC,IAAIlB,EAAUD,GAEfY,EAgCSQ,CAAkBvB,EAAiB,CAAEI,WAAUD,eAM7D,OAJIA,GACFW,EAAMR,UAIN,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBACT,CAAE,0BAA2BtB,IAAaL,EAASY,UAEvDgB,QAASd,KAAKH,WANhB,iCAWA,wBACEe,KAAK,SACLD,UACEE,IAAW,qBACT,CAAE,8BAA+BtB,IAAaL,EAASU,SAE3DkB,QAASd,KAAKL,aANhB,4BAWA,wBACEiB,KAAK,SACLD,UACEE,IAAW,oBACT,CAAE,8BAA+BvB,IAErCwB,QAASd,KAAKP,QANhB,sBAWEH,GAAcC,IAAaL,EAASM,OAElC,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,MAHhB,sBAUN,6BACGE,EAAMc,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eArFpC,GAAyBC,IAAMC,WClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e79364a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByName = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-info',\n                { 'button is-info is-light': sortType !== SortType.ALPABET })\n            }\n            onClick={this.sortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-success ',\n                { 'button is-success  is-light': sortType !== SortType.LENGTH })\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-warning',\n                { 'button is-warning is-light': !isReversed })\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {goods.map((good) => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}